{"version":3,"sources":["components/Counter/Controls.js","components/Counter/Value.js","components/Counter/Counter.jsx","components/App/App.js","index.js"],"names":["Controls","onIncrement","onDecrement","onGood","onNeutral","onBad","className","type","onClick","Value","value","good","neutral","bad","all","posfeed","Counter","state","props","initialValue","positive","handleIncrement","setState","prevState","handleDecrement","handleGoodIncrement","handleNeutralIncrement","handleBadIncrement","this","React","Component","defaultProps","App","initialvalue","ReactDOM","render","document","getElementById"],"mappings":"wPAYeA,EAVE,SAAC,GAAD,EAAGC,YAAH,EAAgBC,YAAhB,IAA6BC,EAA7B,EAA6BA,OAAQC,EAArC,EAAqCA,UAAWC,EAAhD,EAAgDA,MAAhD,OACf,sBAAKC,UAAU,oBAAf,UAGE,wBAAQC,KAAK,SAASC,QAASL,EAA/B,kBACA,wBAAQI,KAAK,SAASC,QAASJ,EAA/B,qBACA,wBAAQG,KAAK,SAASC,QAASH,EAA/B,qBCeWI,EArBD,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,QAC7C,OAAa,IAATJ,GAAsB,IAARE,GAAyB,IAAZD,EACpB,kDAGP,gCACA,uBAAMN,UAAU,iBAAhB,oBAAyCI,KACzC,uBACA,uBAAMJ,UAAU,iBAAhB,mBAAyCK,KACzC,uBACA,uBAAML,UAAU,iBAAhB,sBAA4CM,KAC5C,uBACA,uBAAMN,UAAU,iBAAhB,kBAAwCO,KACxC,uBACA,uBAAMP,UAAU,iBAAhB,oBAA0CQ,KAC1C,uBACA,uBAAMR,UAAU,iBAAhB,gCAAsDS,EAAtD,WCbFC,E,4MASJC,MAAQ,CACNP,MAAO,EAAKQ,MAAMC,aAClBR,KAAM,EAAKO,MAAMC,aACjBP,QAAS,EAAKM,MAAMC,aACpBN,IAAK,EAAKK,MAAMC,aAChBL,IAAK,EAAKI,MAAMC,aAChBC,SAAU,EAAKF,MAAMC,c,EAEvBE,gBAAkB,WAChB,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC5Bb,MAAOa,EAAUb,MAAQ,O,EAI7Bc,gBAAkB,WAChB,EAAKF,UAAS,SAACC,GACb,GAAwB,IAApBA,EAAUb,MAGd,MAAO,CACLA,MAAOa,EAAUb,MAAQ,O,EAI/Be,oBAAsB,WACpB,EAAKH,UAAS,SAACC,GACX,MAAO,CACLZ,KAAMY,EAAUZ,KAAO,EACvBG,IAAKS,EAAUT,IAAM,O,EAI7BY,uBAAyB,WACvB,EAAKJ,UAAS,SAACC,GAAD,MAAgB,CAC5BX,QAASW,EAAUX,QAAU,EAC7BE,IAAKS,EAAUT,IAAM,O,EAGzBa,mBAAqB,WACnB,EAAKL,UAAS,SAACC,GAAD,MAAgB,CAC5BV,IAAKU,EAAUV,IAAM,EACrBC,IAAKS,EAAUT,IAAM,O,4CAGzB,WACE,IAAMM,EAA+B,IAApBQ,KAAKX,MAAMN,KAAeiB,KAAKX,MAAMN,KAAOiB,KAAKX,MAAMH,IAAO,IAAO,EACtF,OACE,sBAAKR,UAAU,UAAf,UACE,cAAC,EAAD,CACEL,YAAa2B,KAAKP,gBAClBnB,YAAa0B,KAAKJ,gBAClBrB,OAAQyB,KAAKH,oBACbrB,UAAWwB,KAAKF,uBAChBrB,MAAOuB,KAAKD,qBAEd,cAAC,EAAD,CACEjB,MAAOkB,KAAKX,MAAMP,MAClBC,KAAMiB,KAAKX,MAAMN,KACjBC,QAASgB,KAAKX,MAAML,QACpBC,IAAKe,KAAKX,MAAMJ,IAChBC,IAAKc,KAAKX,MAAMH,IAChBC,QAASK,W,GAtEGS,IAAMC,WAAtBd,EACGe,aAAe,CACpBZ,aAAc,GA4EHH,QCtEAgB,EATH,WACV,OACE,gCACE,uDACA,cAAC,EAAD,CAASC,aAAc,SCJ7BC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e6179cae.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Controls = ({ onIncrement, onDecrement, onGood, onNeutral, onBad }) => (\r\n  <div className=\"Counter__controls\">\r\n    {/* <button type=\"button\" onClick={onIncrement}>Увеличить на 1</button>\r\n    <button type=\"button\" onClick={onDecrement}>Уменьшить на 1</button> */}\r\n    <button type=\"button\" onClick={onGood}>Good</button>\r\n    <button type=\"button\" onClick={onNeutral}>Neutral</button>\r\n    <button type=\"button\" onClick={onBad}>Bad</button>\r\n  </div>\r\n);\r\n\r\nexport default Controls;\r\n\r\n","import React from 'react';\r\n\r\nconst Value = ({ value, good, neutral, bad, all, posfeed }) => {\r\n    if (good === 0 && bad === 0 && neutral === 0) {\r\n        return <p>No feedback given</p>;\r\n    }\r\n    return (\r\n        <div>\r\n        <span className=\"Counter__value\">Value: {value}</span>\r\n        <br/>\r\n        <span className=\"Counter__value\">Good: { good }</span>\r\n        <br/>\r\n        <span className=\"Counter__value\">Neutral: { neutral }</span>\r\n        <br/>\r\n        <span className=\"Counter__value\">Bad: { bad }</span>\r\n        <br/>\r\n        <span className=\"Counter__value\">Total: { all }</span>\r\n        <br/>\r\n        <span className=\"Counter__value\">Positive Feedback: { posfeed }%</span>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Value;","import React from 'react';\r\nimport './Counter.module.css';\r\nimport Controls from './Controls';\r\nimport Value from './Value';\r\n\r\nclass Counter extends React.Component {\r\n  static defaultProps = {\r\n    initialValue: 0,\r\n  };\r\n\r\n  static propTypes = {\r\n    //\r\n  };\r\n\r\n  state = {\r\n    value: this.props.initialValue,\r\n    good: this.props.initialValue,\r\n    neutral: this.props.initialValue,\r\n    bad: this.props.initialValue,\r\n    all: this.props.initialValue,\r\n    positive: this.props.initialValue,\r\n  }\r\n  handleIncrement = () => {\r\n    this.setState((prevState) => ({\r\n      value: prevState.value + 1,\r\n    }));\r\n  };\r\n\r\n  handleDecrement = () => {\r\n    this.setState((prevState) => {\r\n      if (prevState.value === 0) {\r\n        return;\r\n      }\r\n      return {\r\n        value: prevState.value - 1,\r\n      }\r\n    });\r\n  }\r\n  handleGoodIncrement = () => {\r\n    this.setState((prevState) => {\r\n        return {\r\n          good: prevState.good + 1,\r\n          all: prevState.all + 1,\r\n      } \r\n    });\r\n  }\r\n  handleNeutralIncrement = () => {\r\n    this.setState((prevState) => ({\r\n      neutral: prevState.neutral + 1,\r\n      all: prevState.all + 1,\r\n    }));\r\n  }\r\n  handleBadIncrement = () => {\r\n    this.setState((prevState) => ({\r\n      bad: prevState.bad + 1,\r\n      all: prevState.all + 1,\r\n    }));\r\n  }\r\n  render() {\r\n    const positive = this.state.good !== 0 ? ((this.state.good / this.state.all) * 100) : 0;\r\n    return (\r\n      <div className=\"Counter\">\r\n        <Controls\r\n          onIncrement={this.handleIncrement}\r\n          onDecrement={this.handleDecrement}\r\n          onGood={this.handleGoodIncrement}\r\n          onNeutral={this.handleNeutralIncrement}\r\n          onBad={this.handleBadIncrement}\r\n        />\r\n        <Value\r\n          value={this.state.value}\r\n          good={this.state.good}\r\n          neutral={this.state.neutral}\r\n          bad={this.state.bad}\r\n          all={this.state.all}\r\n          posfeed={positive}\r\n\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Counter;","import React from 'react';\nimport Counter from '../Counter/Counter';\n\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Please leave feedback</h1>\n      <Counter initialvalue={10}/>\n    </div>\n  );\n}\n\nexport default App;\n","import {StrictMode} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}